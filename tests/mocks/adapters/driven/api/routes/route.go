// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Route is an autogenerated mock type for the Route type
type Route struct {
	mock.Mock
}

type Route_Expecter struct {
	mock *mock.Mock
}

func (_m *Route) EXPECT() *Route_Expecter {
	return &Route_Expecter{mock: &_m.Mock}
}

// Setup provides a mock function with given fields:
func (_m *Route) Setup() {
	_m.Called()
}

// Route_Setup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Setup'
type Route_Setup_Call struct {
	*mock.Call
}

// Setup is a helper method to define mock.On call
func (_e *Route_Expecter) Setup() *Route_Setup_Call {
	return &Route_Setup_Call{Call: _e.mock.On("Setup")}
}

func (_c *Route_Setup_Call) Run(run func()) *Route_Setup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Route_Setup_Call) Return() *Route_Setup_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewRoute interface {
	mock.TestingT
	Cleanup(func())
}

// NewRoute creates a new instance of Route. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRoute(t mockConstructorTestingTNewRoute) *Route {
	mock := &Route{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
