{
    "swagger": "2.0",
    "info": {
        "description": "An template for implementing a hexagonal application.",
        "title": "GO template API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/",
    "paths": {
        "/users": {
            "get": {
                "summary": "Retrieve users by paginated response",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PageableResponse-response_UserResponse"
                        }
                    },
                    "400": {
                        "description": "in case of an error",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a user using the prerequisites provided",
                "responses": {
                    "201": {
                        "description": "if a new user was created",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    },
                    "400": {
                        "description": "in case of a bad request",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Retrieves a user by the provided ID.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PageableResponse-response_UserResponse"
                        }
                    },
                    "400": {
                        "description": "in case of a bad request",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    },
                    "404": {
                        "description": "if an invalid ID is provided",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    }
                }
            },
            "post": {
                "summary": "Updates an existing user.",
                "responses": {
                    "200": {
                        "description": "the updated users",
                        "schema": {
                            "$ref": "#/definitions/response.UserResponse"
                        }
                    },
                    "400": {
                        "description": "in case of a bad request",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    },
                    "500": {
                        "description": "in case of an internal error",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a user by id.",
                "responses": {
                    "204": {
                        "description": "if the user is deleted successfully"
                    },
                    "400": {
                        "description": "in case of a bad request",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    },
                    "500": {
                        "description": "in case of an internal error",
                        "schema": {
                            "$ref": "#/definitions/response.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.APIError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "id"
                },
                "message": {
                    "type": "string",
                    "example": "invalid id"
                },
                "value": {}
            }
        },
        "response.PageableResponse-response_UserResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserResponse"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "numberOfElements": {
                    "type": "integer"
                },
                "totalElements": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "response.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}